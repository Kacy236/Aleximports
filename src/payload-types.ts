/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

 export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
    categories: Categories;
    tenants: Tenants; // Added Tenants collection
    products: Products; // Added Products collection
    tags: Tags; // Added Tags collection
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}

export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}

export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
  username: string;
  roles?: ('super-admin' | 'user')[] | null;
  tenants?: { tenant: string | Tenants }[] | null; // Added tenants field
}

export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}

export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}

export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}

export interface Categories {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
  color?: string | null;
  parent?: string | Categories | null;
  tenants?: { tenant: string | Tenants }[] | null; // Added tenants field
}

export interface Tenants {
  id: string;
  name: string;
  slug: string;
  image?: string | Media | null; // Relationship to Media
  stripeAccountId: string;
  stripeDetailsSubmitted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}

export interface Products {
  id: string;
  updatedAt: string;
  createdAt: string;
  // Add other fields based on Products.ts
  tenants?: { tenant: string | Tenants }[] | null; // Added due to multi-tenant plugin
}

export interface Tags {
  id: string;
  updatedAt: string;
  createdAt: string;
  // Add other fields based on Tags.ts
}

export interface Auth {
  [k: string]: unknown;
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}